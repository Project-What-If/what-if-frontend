{"version":3,"sources":["components/views/RoomsPage/RoomsList/RoomsList.js","slice/roomSlice.js","components/views/RoomPage/RoomRegister/Sections/RoomRegisterOrEdit.js","components/views/RoomPage/RoomRegister/RoomRegister.js","slice/roomsSlice.js","components/views/RoomsPage/RoomsPage.js","components/views/RoomPage/Sections/RoomDetail.js","components/views/RoomPage/RoomPage.js","components/App.js","reportWebVitals.js","slice/rootSlice.js","utils/history.js","sagas/roomSaga.js","sagas/roomsSaga.js","sagas/rootSaga.js","store.js","index.js"],"names":["RoomsList","props","console","log","rooms","width","map","room","id","to","title","views","roomSlice","createSlice","name","initialState","tag","content","image","imageURL","date","Date","now","editDate","reducers","registerRoom","state","payload","getRoom","getRoomAsync","roomReducers","reducer","roomActions","actions","TextArea","Input","RoomRegisterOrEdit","style","maxWidth","margin","onSubmit","handleSubmit","onChange","handleTitleChange","value","titleValue","type","placeholder","handleTagChange","tagValue","handleContentChange","contentValue","handleImageChange","accept","imagePreview","onClick","updateRequest","RoomRegister","dispatch","useDispatch","useSelector","useState","TitleValue","setTitleValue","TagValue","setTagValue","ContentValue","setContentValue","ImageValue","setImageValue","ImageURLValue","setImageURLValue","IsForUpdate","className","src","height","imageValue","imageURLValue","event","currentTarget","preventDefault","reader","FileReader","file","target","files","readAsDataURL","onloadend","result","undefined","alert","roomsSlice","isLoading","isSuccess","error","getRooms","getRoomsAsync","data","roomsReducers","roomsActions","Title","Typography","RoomsPage","check","onCheck","useEffect","RoomDetail","textAlign","colspan","RoomPage","match","location","params","roomId","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","createBrowserHistory","registerRoomAsync","action","Axios","post","response","history","push","get","put","rootWatcher","takeLatest","takeEvery","sagaMiddleware","createSagaMiddleware","context","store","configureStore","middleware","logger","devTools","preloadedState","run","rootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fdaac27.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from 'antd';\n\nfunction RoomsList(props) {\n    console.log(props.rooms);\n    return (\n        <div>\n            <table>\n                <colgroup>\n                    <col width=\"10%\" /> <col width=\"10%\" /> <col width=\"40%\" /> <col width=\"40%\" />\n                </colgroup>\n                <tr>\n                    <th>번호</th> <th>제목</th> <th>조회수</th>\n                </tr>\n                {props.rooms.map(room => (\n                    <tr>\n                        <td>{room.id}</td>\n                        <Link to={`/room/${room.id}`}>\n                            <td>{room.title}</td>\n                        </Link>\n                        <td>{room.views}</td>\n                    </tr>\n                ))}\n            </table>\n        </div>\n    );\n}\n\nexport default RoomsList;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const roomSlice = createSlice({\n    name: 'room',\n    initialState: {\n        id: 0,\n        title: '',\n        tag: '',\n        content: '',\n        image: null,\n        imageURL: '',\n        views: 0,\n        date: new Date(Date.now()),\n        editDate: new Date(Date.now()),\n    },\n    reducers: {\n        registerRoom: (state, { payload: room }) => {\n            console.log(room); // saga 감시용\n        },\n        // registerRoomAsync: (state, { payload }) => {\n        //     console.log(payload);\n        //     debugger;\n        //     return { ...state, id: payload.id };\n        // },\n        getRoom: (state, { payload: id }) => {\n            console.log(id); // saga 감시용\n        },\n        getRoomAsync: (state, { payload: room }) => {\n            return {\n                ...state,\n                id: room.id,\n                title: room.title,\n                tag: room.tag,\n                content: room.content,\n                image: room.image,\n                imageURL: room.imageURL,\n                views: room.views,\n                date: room.date,\n                editDate: room.editDate,\n            }; // 실질적으로 내용을 뿌려주는 부분\n        },\n    },\n});\n\nexport const roomReducers = roomSlice.reducer;\nexport const roomActions = roomSlice.actions;\n","import React from 'react';\nimport { Button, Input } from 'antd';\n\nconst { TextArea } = Input;\n\nfunction RoomRegisterOrEdit(props) {\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <form onSubmit={props.handleSubmit}>\n                <br />\n                <div style={{ maxWidth: '700px', margin: '2rem' }}>\n                    <Input onChange={props.handleTitleChange} value={props.titleValue} type=\"text\" name=\"title\" placeholder=\":제목을 입력하세요\" />\n                    <hr></hr>\n                    <Input onChange={props.handleTagChange} value={props.tagValue} type=\"text\" name=\"tag\" placeholder=\"#태그를 입력해주세요(최대 3개)\" />\n                    <hr></hr>\n                    <div>\n                        <TextArea onChange={props.handleContentChange} value={props.contentValue} name=\"content\" />\n                    </div>\n                    <Input onChange={props.handleImageChange} accept=\"image/jpg,image/png,image/jpeg,image/gif\" type=\"file\" name=\"image\" />\n                    {props.imagePreview}\n                </div>\n                <Button type=\"danger\" onClick={props.handleSubmit}>\n                    {props.updateRequest ? '수정' : '등록'}\n                </Button>\n            </form>\n        </div>\n    );\n}\n\nexport default RoomRegisterOrEdit;\n","import React, { useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { roomActions } from '../../../../slice/roomSlice';\nimport RoomRegisterOrEdit from './Sections/RoomRegisterOrEdit';\n\nfunction RoomRegister() {\n    const dispatch = useDispatch();\n\n    const { views, date, editDate } = useSelector(state => ({\n        views: state.roomReducers.views,\n        date: state.roomReducers.date,\n        editDate: '',\n    }));\n\n    const [TitleValue, setTitleValue] = useState('');\n    const [TagValue, setTagValue] = useState('');\n    const [ContentValue, setContentValue] = useState('');\n    const [ImageValue, setImageValue] = useState(null);\n    const [ImageURLValue, setImageURLValue] = useState('');\n    // const ImageRef = useRef();\n\n    const [IsForUpdate, setIsForUpdate] = useState(false);\n\n    const onTitleChange = event => {\n        setTitleValue(event.currentTarget.value);\n    };\n    // console.log(TitleValue);\n\n    const onTagChange = event => {\n        setTagValue(event.currentTarget.value);\n    };\n    // console.log(TagValue);\n\n    const onContentChange = event => {\n        setContentValue(event.currentTarget.value);\n    };\n    // console.log(ContentValue);\n\n    const onImageChange = event => {\n        event.preventDefault();\n        const reader = new FileReader();\n        const file = event.target.files[0];\n        if (file) reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setImageValue(file);\n            setImageURLValue(reader.result);\n        };\n    };\n\n    let imagePreview = null;\n    if (ImageValue !== null) {\n        imagePreview = <img className=\"image_preview\" src={ImageURLValue} width=\"250\" height=\"250\"></img>;\n    }\n\n    const onSubmitRoom = event => {\n        event.preventDefault();\n        if (TitleValue === '' || TitleValue === null || TitleValue === undefined) {\n            alert('제목을 작성하십시오.');\n            return false;\n        }\n        if (TagValue === '' || TagValue === null || TagValue === undefined) {\n            alert('태그를 작성하십시오.');\n            return false;\n        }\n        if (ContentValue === '' || ContentValue === null || ContentValue === undefined) {\n            alert('내용을 작성하십시오.');\n            return false;\n        }\n        if (ImageValue === '' || ImageValue === null || ImageValue === undefined) {\n            alert('이미지를 넣으십시오.');\n            return false;\n        }\n\n        const room = {\n            title: TitleValue,\n            tag: TagValue,\n            content: ContentValue,\n            image: ImageValue,\n            imageURL: ImageURLValue,\n            views,\n            date,\n            editDate,\n        };\n        dispatch(roomActions.registerRoom(room));\n\n        // 초기화\n        setTitleValue('');\n        setTagValue('');\n        setContentValue('');\n        setImageValue(null);\n        setImageURLValue('');\n        return true;\n        // ImageRef.current.value = '';\n    };\n\n    return (\n        <>\n            <RoomRegisterOrEdit\n                titleValue={TitleValue}\n                tagValue={TagValue}\n                contentValue={ContentValue}\n                imageValue={ImageValue}\n                imageURLValue={ImageURLValue}\n                // imageRef={ImageRef}\n                imagePreview={imagePreview}\n                handleTitleChange={onTitleChange}\n                handleTagChange={onTagChange}\n                handleContentChange={onContentChange}\n                handleImageChange={onImageChange}\n                handleSubmit={onSubmitRoom}\n                updateRequest={IsForUpdate}\n            />\n        </>\n    );\n}\n\nexport default RoomRegister;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const roomsSlice = createSlice({\n    name: 'rooms',\n    initialState: {\n        rooms: [],\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n    }, // room 배열 리스트를 가져오는 것이어서 state를 하나하나 지정할 필요 X\n\n    reducers: {\n        getRooms: (state, { payload }) => {\n            console.log('getRooms 액션 호출');\n        },\n        getRoomsAsync: (state, { payload: data }) => {\n            return {\n                ...state,\n                rooms: data,\n                isSuccess: true,\n                isLoading: false,\n            };\n        },\n    },\n});\n\nexport const roomsReducers = roomsSlice.reducer;\nexport const roomsActions = roomsSlice.actions;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Typography } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport RoomsList from './RoomsList/RoomsList';\nimport RoomRegister from '../RoomPage/RoomRegister/RoomRegister';\nimport { roomsActions } from '../../../slice/roomsSlice';\n\nconst { Title } = Typography;\n\nfunction RoomsPage() {\n    const [check, onCheck] = useState(false);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(roomsActions.getRooms());\n    }, [dispatch]);\n\n    const rooms = useSelector(state => state.roomsReducers.rooms);\n\n    return (\n        <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n            <div>\n                <Title>Best</Title>\n            </div>\n            <div>\n                <Button type=\"primary\" onClick={() => onCheck(!check)}>\n                    +\n                </Button>\n                {check && <RoomRegister />}\n            </div>\n            <div>\n                <RoomsList rooms={rooms} />\n            </div>\n        </div>\n    );\n}\n\nexport default RoomsPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nfunction RoomDetail(props) {\n    return (\n        <div style={{ width: '80%', margin: '3rem auto' }}>\n            <div style={{ margin: '2rem auto' }}>\n                <Link to=\"/\">\n                    <Button type=\"primary\">목록으로 가기</Button>\n                </Link>\n            </div>\n\n            <div style={{ textAlign: 'center' }}>\n                <Title>방</Title>\n            </div>\n            <div>\n                <table>\n                    <colgroup>\n                        <col width=\"10%\" /> <col width=\"40%\" /> <col width=\"10%\" /> <col width=\"40%\" />\n                    </colgroup>\n                    <tr>\n                        <th>번호</th> <td>{props.id}</td> <th>조회수</th> <td>{props.views}</td>\n                    </tr>\n                    <tr>\n                        <th>제목</th> <td colspan=\"3\">{props.title}</td>\n                    </tr>\n                    <tr>\n                        <th>태그</th> <td colspan=\"3\">{props.tag}</td>\n                    </tr>\n                    <tr>\n                        <th>이미지URL</th>\n                        <td colspan=\"3\">\n                            <img className=\"image\" src={props.imageURL} width=\"250\" height=\"250\"></img>\n                        </td>\n                    </tr>\n                    <tr>\n                        <th>내용</th> <td colspan=\"3\">{props.content}</td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default RoomDetail;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { roomActions } from '../../../slice/roomSlice';\nimport RoomDetail from './Sections/RoomDetail';\n\nfunction RoomPage({ match, location }) {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(roomActions.getRoom(match.params.roomId));\n    }, [match.params.roomId]);\n\n    const { id, title, tag, content, image, imageURL } = useSelector(state => ({\n        id: state.roomReducers.id,\n        title: state.roomReducers.title,\n        tag: state.roomReducers.tag,\n        content: state.roomReducers.content,\n        // image: state.roomReducers.image,\n        imageURL: state.roomReducers.imageURL,\n    }));\n    const date = useSelector(state => state.roomReducers.date);\n    const views = useSelector(state => state.roomReducers.views);\n\n    return (\n        <div>\n            <RoomDetail id={id} title={title} tag={tag} content={content} imageURL={imageURL} views={views} date={date} />\n        </div>\n    );\n}\n\nexport default RoomPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport RoomsPage from './views/RoomsPage/RoomsPage';\nimport RoomPage from './views/RoomPage/RoomPage';\nimport '../App.css';\n\nfunction App() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={RoomsPage} />\n                <Route exact path=\"/room/:roomId\" component={RoomPage} />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","// rootReducer\nimport { combineReducers } from 'redux';\nimport { roomReducers } from './roomSlice';\nimport { roomsReducers } from './roomsSlice';\n\nconst rootReducer = combineReducers({ roomReducers, roomsReducers });\n\nexport default rootReducer;\n","// 유지보수용으로 따로 뺌: 반복되는 것은 따로 빼자\nimport { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { call, put, getContext } from 'redux-saga/effects';\nimport Axios from 'axios';\nimport { roomActions } from '../slice/roomSlice';\nimport history from '../utils/history';\n\nexport function* registerRoomAsync(action) {\n    const data = action.payload;\n\n    const response = yield Axios.post(`http://localhost:4000/room`, data);\n\n    yield alert('저장되었습니다.');\n\n    console.log(response.data.id);\n\n    history.push(`/room/${response.data.id}`, response.data.id);\n}\nexport function* getRoomAsync(action) {\n    const id = action.payload;\n\n    const response = yield Axios.get(`http://localhost:4000/room/${id}`);\n\n    console.log(response.data);\n\n    yield put(roomActions.getRoomAsync(response.data));\n} // getArticle 액션을 가로채서 payload로 보낸 id로 게시글을 조회\n","import { call, put } from 'redux-saga/effects';\nimport Axios from 'axios';\nimport { roomsActions } from '../slice/roomsSlice';\n\nexport function* getRoomsAsync() {\n    const response = yield Axios.get(`http://localhost:4000/room`);\n\n    yield put(roomsActions.getRoomsAsync(response.data));\n}\n","// saga도 기능별로 만들 수 있으므로 rootSaga 하나 둠\nimport { takeEvery, takeLatest } from 'redux-saga/effects';\nimport { roomActions } from '../slice/roomSlice';\nimport { roomsActions } from '../slice/roomsSlice';\nimport { registerRoomAsync, getRoomAsync } from './roomSaga';\nimport { getRoomsAsync } from './roomsSaga';\n\nconst { registerRoom, getRoom } = roomActions;\nconst { getRooms } = roomsActions;\n\nexport default function* rootWatcher() {\n    yield takeLatest(registerRoom.type, registerRoomAsync);\n    yield takeEvery(getRoom.type, getRoomAsync);\n    yield takeEvery(getRooms.type, getRoomsAsync);\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport rootReducer from './slice/rootSlice';\nimport rootSaga from './sagas/rootSaga';\nimport history from './utils/history';\n\nconst sagaMiddleware = createSagaMiddleware({\n    context: { history: history },\n});\nconst initialState = {};\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware: [sagaMiddleware, logger],\n    devTools: true,\n    preloadedState: initialState,\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\nimport history from './utils/history';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}